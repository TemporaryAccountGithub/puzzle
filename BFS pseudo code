BFS (puzzle):
  Visited = List()
	Q = Queue()
	Q.Enquque(puzzle.InitState)
  while not Q.Empty() do:
      current = Q.Dequeue()
      Visited.Add(current)
      if current == puzzle.FinalState then:
            return Visited
      for puzzleState in puzzle.GetNextPossibleMoves(current) do:
            if puzzleState not in Visited do:
                  Q.Enqueue(puzzleState)

  return "No Solution!"
